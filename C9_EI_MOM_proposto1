# Cálculo numérico para engenharia elétrica com PYTHON
# Capítulo 9: equações integrais_PROPOSTO1
# Método dos Momentos

import numpy as np
from math import sqrt
from scipy.constants import pi

N = int(input('Qual o valor de N? '))


ER = 1
EO = 8.8541e-12
V0 = 2
AA = 1
BB = 1
C = 1
NT = 2*N
M = sqrt(N)
DX = AA/M
DY = BB/M
DL = DX
I = range(0,N)
K = 0
X  = np.array([])
Y = np.array([])


Z = np.zeros(2*N)
A = np.zeros((NT,NT))
B = np.zeros(2*N)

# A
for K1 in range(0,2):
    for K2 in range(0,int(M)):
        for K3 in range(0,int(M)):
            K = K + 1
            X = np.append(X, DX*(K2-0.5))
            Y = np.append(Y, DY*(K3-0.5))
        


for K1 in range(0,N):
    #Z = np.append(Z, 0)
    Z[K1+N] = C

for I in range(0,NT):
    for J in range(0,NT):
        if I==J:
            A[I,J] = DL*0.8814/(pi*EO)
        else:
            R = sqrt( (X[I]-X[J])**2+(Y[I]-Y[J])**2+(Z[I]-Z[J])**2)
            A[I,J] = DL**2/(4*pi*EO*R)
        
    

# B
for K in range(0,N):
    B[K]=1
    B[K+N]=-1


# Q e C
F = np.linalg.inv(A)
RHO = np.dot(F,np.transpose(B))
SUM = 0
for I in range(0,N):
    SUM = SUM + RHO[I]

Q = SUM*(DL**2)
Cap = abs(Q)/V0

print(f'\nPara N = {N}, Cap = {Cap}')
