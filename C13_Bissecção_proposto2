# Cálculo numérico para engenharia elétrica com PYTHON
# Capítulo 3: Raízes_PROPOSTO2
# Método intervalar: Bissecção
# Beta
import matplotlib.pyplot as plt
import numpy as np
import math as m

f = 1000   #s
L = 0.100  #a
R = 1000   #r
theta = m.atan(2*m.pi*f*L/R)
I = []
fb = []
x = np.arange(0,2*m.pi,.0001)

for i in range(0,len(x)):
    I.append(np.sin(x[i]-theta)+np.sin(theta)*np.exp(-x[i]/np.tan(theta)))


iter = 1            # número de iterações
x1 = m.pi             # aproximação inferior
x2 = 2*m.pi           # aproximação superior
es = 0.000001       # erro relativo desejado
maxit = 50          # número máximo de iterações
ec = 100            # erro calculado
b = []
x=x1
while True:
    x_velho = x
    x = (x1+x2)/2
    b.append(x)      # para gráfico
    #função em estudo
    fx1 = np.sin(x1-theta)+np.sin(theta)*np.exp(-x1/np.tan(theta))
    fx = np.sin(x-theta)+np.sin(theta)*np.exp(-x/np.tan(theta))
    test = fx1*fx
    if test < 0:
        x2=x
    elif test > 0:
        x1=x
    else:
       ec=0

    fb.append(fx) #para gráfico
    ec = abs(x1-x2)
    iter = iter+1
    if ec <= es or iter >= maxit:
        break

print(f'iter = {iter}')
xx = b[-1]*360/(2*m.pi)
print(f'xx = {xx}')

