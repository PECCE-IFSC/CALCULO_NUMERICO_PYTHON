import numpy as np

A = np.array([[20, 10],
              [10, 20]])
b = np.array([[100],
              [100]])

II =  np.linalg.lstsq(A, b, rcond=None)[0]

I = II[0]+II[1]

iter = 0           #número de iterações
maxit = 5000       #número máximo de iterações
es = .0001        #critério de parada

m = np.size(A,0)
n = np.size(A,0)

x = np.zeros(n) #cria vetor de soluções

C=A.copy()

for i in range(0,n):
    C[i,i] = 0     #zerar diagonal


x = x.reshape((2,1))


d = np.zeros(n)

for i in range(0,n):
    d[i] = float(b[i]/A[i,i])   #determinação de d
ea=np.zeros(n)

C = np.divide(C,A[i,i])  #determinação de C

while True:
    x_velho = x.copy()
    for i in range(0,n):
        x[i] = d[i]-np.dot(C[i,:],x)
        #print(f'x =\n {x}')  
        if x[i] != 0:
            ea[i] = (abs((x[i] - x_velho[i])/x[i]))
            #print(f'abs({x[i]} - {x_velho[i]}/{x[i]})')

    iter = iter+1
    if  iter >= maxit or max(ea)<=es:  
        break

print(f'II =\n{II}\n')
print(f'I = {I}\n')
print(f'x =\n {x}\n')
print(f'iter = {iter}\n')
print(f'ea =\n {ea}\n')
